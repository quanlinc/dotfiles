
# Use backtick as the prefix
# Do it just like this or you will not 
# be able to use type backtick literally
unbind C-b
# set -g prefix 'C-\'
# bind 'C-\' send-prefix
set -g prefix Escape
bind Escape send-prefix
bind-key L last-window

set -g default-terminal "screen-256color"

set -g default-command "reattach-to-user-namespace -l zsh"


# Start numbering at 1
set -g base-index 1

# Make mouse useful in copy mode
set -g mouse on
#
# # Scroll History
set -g history-limit 30000
#
# # Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on
#
# Basically allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-justify left
set -g status-bg black
set -g status-fg white
set-option -g status-interval 5
set -g status-right-length 150
set -g status-left ""
set -g status-right "#[fg=green] #(/usr/local/bin/battery Discharging; /usr/local/bin/battery Charging) |  %m-%d-%Y %H:%M  " #(whoami)@nwea.org" # Add space so I can see Growl notifications in full-screen mode

#Having an xterm TERM immediately outside tmux will allow tmux to recognize the modified arrow keys, but it will not pass them through unless you also have its xterm-keys window option turned on.
set-window-option -g xterm-keys on

# Revert to Pre 1.9a split pane current working
# directory behavior
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use '<prefix>-a' <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Highlight active window
set-window-option -g window-status-current-bg red

# Turn on vi bindings in copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Copy to OSX clipboard
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Move around panes vim style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#unbind C-7
bind-key M-7 resize-pane -t 1 -x 90
bind-key M-8 resize-pane -t 1 -x 60
bind-key M-9 resize-pane -t 1 -x 30
bind-key M-0 resize-pane -t 0 -x 30

#percol integration
bind b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk \"/^$(tmux display-message -p '#{session_name}'):/ {print NR-1}\") | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux switch-client -t"

#Fix iTerm2 tmux integration, there's a problem with the iTerm2 and tmux 2.x which needs this option to be turned off to run
#setw -g aggressive-resize off
