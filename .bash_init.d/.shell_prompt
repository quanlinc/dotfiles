#-------------------------------------------------------------
# Shell Prompt
#-------------------------------------------------------------
MYSHELL=$(ps -hp $$|awk '{print $4}')
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

# Define some colors first: (Might swtich to use 'tput' in the future)
# Note: \e is a shell specific way of saying escape, it's alternative is \033  (033 is esc in octal. It's 1B in hex, 27 in decimal)
# somehow printf will parse teh "\e" version of color correctly, but not in \033 format.
# however, echo can handle \033 in the right way. The difference between echo and printf can be found here:
# http://www.in-ulm.de/~mascheck/various/echo+printf/

# a good place to learn about color and your term compatibility
# since I'm using MacOS X snow leopard, the term by default is xterm-color which supports 16 color,
# so won't be able to set some fancy color to the prompt, will use xterm-256color someday, or just switch to linux
red='\e[0;31m'
RED='\e[1;31m'
green='\e[0;32m'
GREEN='\e[1;32m'
yellow='\e[0;33m'
YELLOW='\e[1;33m'
blue='\e[0;34m'
BLUE='\e[1;34m'
magenta='\e[0;35m'
MAGENTA='\e[1;35m'
cyan='\e[0;36m'
CYAN='\e[1;36m'
white='\e[0;37m'
WHITE='\e[1;37m'
BOLD=""
NC='\e[0m'              # No Color
ORANGE='\e[38;5;202m]'  # won't work until your term supports 256 colors


if [[ "${DISPLAY%%:0*}" != "" ]]; then  
    HILIT=${red}   # remote machine: prompt will be partly red
else
    HILIT=${cyan}  # local machine: prompt will be partly cyan
fi

#  --> Replace instances of \W with \w in prompt functions below
#+ --> to get display of full path name.

function fastprompt()
{
    unset PROMPT_COMMAND
    case $TERM in
        *term | rxvt )
            PS1="${HILIT}[\h]$NC \W > \[\033]0;\${TERM} [\u@\h] \w\007\]" ;;
        linux )
            PS1="${HILIT}[\h]$NC \W > " ;;
        *)
            PS1="[\h] \W > " ;;
    esac
}


_powerprompt()
{
    LOAD=$(uptime|sed -e "s/.*: \([^,]*\).*/\1/" -e "s/ //g")
}

print_pre_prompt () 
{ 
    PS1R=$PWD
    printf "$WHITE%${COLUMNS}s$NC" "$PS1R"
}

function git_info() {
	# check if we're in a git repo
	git rev-parse --is-inside-work-tree &>/dev/null || return

	# quickest check for what branch we're on
	branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

	# check if it's dirty (via github.com/sindresorhus/pure)
	dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

	printf $WHITE" on "$CYAN$branch$dirty
}

function powerprompt()
{

    PROMPT_COMMAND=_powerprompt
    case $TERM in
        *term | rxvt  )
            PS1="${HILIT}[\A - \$LOAD]$NC\n[\u@\h \#] \W > \
                 \[\033]0;\${TERM} [\u@\h] \w\007\]" ;;
        linux )
            PS1="${HILIT}[\A - \$LOAD]$NC\n[\u@\h \#] \W > " ;;
        * )
	    PROMPT_COMMAND=print_pre_prompt
            PS1="[$MAGENTA\u@$YELLOW\h $WHITE\A$NC]\$(git_info)$RED âœ˜$NC" ;;
    esac
}

powerprompt     # This is the default prompt -- might be slow.
                # If too slow, use fastprompt instead. ...
